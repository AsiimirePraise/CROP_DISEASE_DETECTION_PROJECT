# Generated by Django 4.2.7 on 2025-07-07 14:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('diagnosis', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RegionalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=100, unique=True)),
                ('country', models.CharField(max_length=100)),
                ('state_province', models.CharField(blank=True, max_length=100)),
                ('climate_type', models.CharField(blank=True, max_length=50)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('total_diagnoses', models.PositiveIntegerField(default=0)),
                ('coordinates', models.CharField(blank=True, help_text='lat,lng', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('primary_crops', models.ManyToManyField(related_name='primary_regions', to='diagnosis.crop')),
            ],
            options={
                'ordering': ['country', 'region_name'],
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('diagnosis_request', 'Diagnosis Request'), ('treatment_started', 'Treatment Started'), ('treatment_completed', 'Treatment Completed'), ('feedback_submitted', 'Feedback Submitted'), ('report_generated', 'Report Generated')], max_length=25)),
                ('details', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TrendAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trend_type', models.CharField(choices=[('disease_outbreak', 'Disease Outbreak'), ('treatment_success', 'Treatment Success'), ('crop_yield', 'Crop Yield'), ('user_engagement', 'User Engagement')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('trend_data', models.JSONField(default=dict)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('significance_score', models.FloatField(default=0.0, help_text='0-1 scale')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crops_affected', models.ManyToManyField(blank=True, to='diagnosis.crop')),
                ('diseases_involved', models.ManyToManyField(blank=True, to='diagnosis.disease')),
                ('regions_affected', models.ManyToManyField(blank=True, to='analytics.regionaldata')),
            ],
            options={
                'ordering': ['-significance_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('disease_trends', 'Disease Trends'), ('crop_health', 'Crop Health'), ('treatment_effectiveness', 'Treatment Effectiveness'), ('regional_analysis', 'Regional Analysis'), ('seasonal_patterns', 'Seasonal Patterns')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('report_data', models.JSONField(default=dict)),
                ('date_range_start', models.DateField()),
                ('date_range_end', models.DateField()),
                ('filters_applied', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiseaseStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(blank=True, max_length=100)),
                ('month', models.PositiveIntegerField()),
                ('year', models.PositiveIntegerField()),
                ('occurrence_count', models.PositiveIntegerField(default=0)),
                ('severity_average', models.FloatField(default=0.0)),
                ('treatment_success_rate', models.FloatField(default=0.0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnosis.crop')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnosis.disease')),
            ],
            options={
                'ordering': ['-year', '-month'],
                'unique_together': {('disease', 'crop', 'region', 'month', 'year')},
            },
        ),
    ]
